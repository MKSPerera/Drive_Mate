name: Build and deploy NestJS app to Azure Web App - drivemate
on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'  # Only trigger on changes in backend folder
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: |
          npm install
          npm install -g prisma
      
      - name: Generate Prisma client
        run: npx prisma generate
      
      - name: Build application
        run: npm run build
        continue-on-error: false
      
      - name: Run tests (non-blocking)
        run: npm test || echo "Tests failed but continuing deployment"
        continue-on-error: true
      
      - name: Prepare deployment package
        run: |
          mkdir -p ../deploy/dist/driver-ranking
          cp -r dist package.json package-lock.json prisma node_modules ../deploy
          
          # Create a startup script to handle database migrations on Azure
          echo "#!/bin/bash" > ../deploy/startup.sh
          echo "cd /home/site/wwwroot" >> ../deploy/startup.sh
          echo "export PATH=\"\$PATH:/home/site/wwwroot/node_modules/.bin\"" >> ../deploy/startup.sh
          echo "if [ -f /home/site/wwwroot/node_modules/.bin/prisma ]; then" >> ../deploy/startup.sh
          echo "  echo 'Running database migrations...'" >> ../deploy/startup.sh
          echo "  /home/site/wwwroot/node_modules/.bin/prisma migrate deploy" >> ../deploy/startup.sh
          echo "fi" >> ../deploy/startup.sh
          echo "npm run start:prod" >> ../deploy/startup.sh
          
          # Make the startup script executable
          chmod +x ../deploy/startup.sh
          
          # Copy Python script if it exists
          if [ -f src/driver-ranking/ranking.py ]; then
            cp -r src/driver-ranking/ranking.py ../deploy/dist/driver-ranking/
          fi
          
          # Create environment file
          cat > ../deploy/.env << EOL
          PORT=8080
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          DIRECT_URL=${{ secrets.DIRECT_URL }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          EOL
          
          # Create web.config for Azure App Service
          cat > ../deploy/web.config << EOL
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="dist/main.js" verb="*" modules="iisnode" />
              </handlers>
              <rewrite>
                <rules>
                  <rule name="NestJS">
                    <match url="/*" />
                    <action type="Rewrite" url="dist/main.js" />
                  </rule>
                </rules>
              </rewrite>
              <iisnode 
                nodeProcessCommandLine="node.exe"
                watchedFiles="web.config;*.js"
                loggingEnabled="true"
                debuggingEnabled="true"
              />
            </system.webServer>
          </configuration>
          EOL
      
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deploy
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: .
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_39584EF908B24D9392814851987B59B0 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_1C6C2ABD0D8442368C5299B18D4089ED }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_4D18475CDFBD4C1DB12908161780321D }}
      
      - name: Configure App Settings for Azure Web App
        uses: azure/appservice-settings@v1
        with:
          app-name: 'drivemate'
          app-settings-json: '[
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "0",
              "slotSetting": false
            },
            {
              "name": "WEBSITE_RUN_FROM_ZIP",
              "value": "0",
              "slotSetting": false
            },
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "false",
              "slotSetting": false
            },
            {
              "name": "STARTUP_COMMAND",
              "value": "/home/site/wwwroot/startup.sh",
              "slotSetting": false
            }
          ]'
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'drivemate'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: .
