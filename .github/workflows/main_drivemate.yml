# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - drivemate

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'   # Only trigger on changes in backend folder
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies, build, and test
        working-directory: ./backend
        run: |
          npm install
          npm run build --if-present
      
      - name: Create .env file for production
        working-directory: ./backend
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          echo "DIRECT_URL=${{ secrets.DIRECT_URL }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION || '1h' }}" >> .env
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}" >> .env
          echo "FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}" >> .env
      
      - name: Generate Prisma client
        working-directory: ./backend
        run: npx prisma generate
      
      - name: Run Prisma migrations
        working-directory: ./backend
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
        run: npx prisma migrate deploy
      
      - name: Modify package.json for deployment
        working-directory: ./backend
        run: |
          # Create a deployment script for Azure
          echo "Creating Azure deployment configuration..."
          
          # Use Node.js to modify package.json
          node -e "
            const fs = require('fs');
            const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
            
            // Remove any Prisma-related scripts to prevent Azure from running them
            if (packageJson.scripts) {
              delete packageJson.scripts.prisma;
              delete packageJson.scripts['prisma:generate'];
              delete packageJson.scripts['prisma:migrate'];
              delete packageJson.scripts['prisma:deploy'];
            }
            
            // Update or add the start script to directly run the compiled app
            packageJson.scripts = packageJson.scripts || {};
            packageJson.scripts.start = 'node dist/main.js';
            
            fs.writeFileSync('package.json', JSON.stringify(packageJson, null, 2));
          "
          
          # Create a deployment marker file
          echo "DEPLOYMENT_DONE=true" > .deployment
      
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: |
            backend/
            !backend/node_modules/
            !backend/.git/
            !backend/.github/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: .
      
      - name: Install production dependencies
        run: |
          npm ci --only=production
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_FE596A967CE04D33B1B32E3A5E6EBD1F }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_50797D44CE4C4D2DA9D2CD5F0E1CC112 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_88D1483B9B4849929D78E62B7CF035AB }}

      - name: Create Azure deployment settings
        run: |
          # Tell Azure not to run custom deployment commands
          echo "{\"skip_app_build\": true}" > .deployment
          
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'drivemate'
          slot-name: 'Production'
          package: . 