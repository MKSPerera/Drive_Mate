name: Build and deploy NestJS app to Azure Web App - drivemate
on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'  # Only trigger on changes in backend folder
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      environment:
        description: 'Environment to deploy to'
        type: environment
        required: true
        default: Production
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: |
          npm install
          npm install -g prisma
      
      - name: Generate Prisma client
        run: npx prisma generate
      
      - name: Build application
        run: npm run build
        continue-on-error: false
      
      - name: Run tests (non-blocking)
        run: npm test || echo "Tests failed but continuing deployment"
        continue-on-error: true
      
      - name: Prepare deployment package
        run: |
          # Create a simple deployment without node_modules (will be installed on the server)
          mkdir -p ../deploy/dist
          cp -r dist package.json package-lock.json prisma ../deploy
          
          if [ -d "src/driver-ranking" ] && [ -f "src/driver-ranking/ranking.py" ]; then
            mkdir -p ../deploy/dist/driver-ranking
            cp -r src/driver-ranking/ranking.py ../deploy/dist/driver-ranking/
          fi
          
          # Create package.json with postinstall script to run prisma generate
          jq '.scripts.postinstall = "npm run generate"' package.json > ../deploy/package.json
          
          # Create a startup script 
          cat > ../deploy/startup.sh << 'EOL'
#!/bin/bash
cd /home/site/wwwroot
npm install --production
echo "Running database migrations..."
npx prisma migrate deploy
echo "Starting application..."
npm run start:prod
EOL
          
          # Make the startup script executable
          chmod +x ../deploy/startup.sh
          
          # Create web.config file for IIS
          cat > ../deploy/web.config << 'EOL'
<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <webSocket enabled="false" />
    <handlers>
      <add name="iisnode" path="dist/main.js" verb="*" modules="iisnode" />
    </handlers>
    <rewrite>
      <rules>
        <rule name="NestJS">
          <match url="/*" />
          <action type="Rewrite" url="dist/main.js" />
        </rule>
      </rules>
    </rewrite>
    <iisnode 
      nodeProcessCommandLine="node.exe"
      watchedFiles="web.config;*.js"
      loggingEnabled="true"
      debuggingEnabled="false"
    />
  </system.webServer>
</configuration>
EOL
          
          # Create a deployment archive
          cd ../deploy
          zip -r ../deploy.zip *
      
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deploy.zip
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: https://drivemate.azurewebsites.net
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: .
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_39584EF908B24D9392814851987B59B0 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_1C6C2ABD0D8442368C5299B18D4089ED }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_4D18475CDFBD4C1DB12908161780321D }}
      
      - name: Configure Azure Web App
        run: |
          echo "Configuring App Settings..."
          az webapp config appsettings set --name drivemate --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --settings \
            WEBSITE_RUN_FROM_PACKAGE=0 \
            WEBSITE_NODE_DEFAULT_VERSION="~18" \
            SCM_DO_BUILD_DURING_DEPLOYMENT=false \
            STARTUP_COMMAND="bash ./startup.sh"
      
      - name: Deploy to Azure Web App
        run: |
          echo "Deploying application..."
          az webapp deploy --name drivemate --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --type zip --src-path deploy.zip --async false
      
      - name: Set environment variables
        run: |
          echo "Setting environment variables..."
          az webapp config appsettings set --name drivemate --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --settings \
            PORT=8080 \
            DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            DIRECT_URL="${{ secrets.DIRECT_URL }}" \
            JWT_SECRET="${{ secrets.JWT_SECRET }}"
      
      - name: Check deployment logs
        run: |
          echo "Checking deployment logs..."
          az webapp log deployment show --name drivemate --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }}
      
      - name: Restart Web App
        run: |
          echo "Restarting the web app..."
          az webapp restart --name drivemate --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }}
      
      - name: Show application logs
        run: |
          echo "Application logs (may take a moment to appear)..."
          az webapp log tail --name drivemate --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --timeout 30
